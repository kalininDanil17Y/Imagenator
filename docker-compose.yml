services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: mini-imagenator-app
    environment:
      APP_ENV: local
      APP_KEY: base64:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
      APP_DEBUG: "true"
      APP_URL: http://localhost:8080

      # DB
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: mini_imagenator
      DB_USERNAME: mini
      DB_PASSWORD: mini_pass

      # S3 (MinIO)
      FILESYSTEM_DISK: s3
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: 3a699a177680caaed70b46479feee381
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: uploads
      AWS_USE_PATH_STYLE_ENDPOINT: "true"
      AWS_ENDPOINT: http://minio:9000

      IMG_DEFAULT_FORMAT: webp
    volumes:
      - ./app:/var/www
    depends_on:
      - postgres
      - minio
    networks: [mini_net]

  nginx:
    image: nginx:1.27-alpine
    container_name: mini-imagenator-nginx
    ports:
      - "8080:80"
    volumes:
      - ./app:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
      - imgproxy
    networks: [mini_net]

  postgres:
    image: postgres:16-alpine
    container_name: mini-imagenator-pg
    environment:
      POSTGRES_DB: mini_imagenator
      POSTGRES_USER: mini
      POSTGRES_PASSWORD: mini_pass
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [mini_net]

  minio:
    image: minio/minio:latest
    container_name: mini-imagenator-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: 3a699a177680caaed70b46479feee381
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 endpoint
      - "9001:9001"  # Web console
    volumes:
      - minio_data:/data
    networks: [mini_net]

  mc-init:
    image: minio/mc:latest
    container_name: mini-imagenator-mcinit
    depends_on: [minio]
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin 3a699a177680caaed70b46479feee381 &&
      mc mb -p local/uploads || true &&
      mc anonymous set download local/uploads || true &&
      exit 0
      "
    networks: [mini_net]

  imgproxy:
    image: darthsim/imgproxy:v3.26
    environment:
      IMGPROXY_ALLOW_UNSAFE_URLS: "true"

      IMGPROXY_ALLOWED_SOURCES: "s3://uploads"
      IMGPROXY_USE_S3: "true"

      # S3/MinIO
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: 3a699a177680caaed70b46479feee381
      AWS_REGION: us-east-1
      IMGPROXY_S3_ENDPOINT: http://minio:9000
      IMGPROXY_S3_USE_PATH_STYLE: "true"

      IMGPROXY_MAX_SRC_RESOLUTION: "100"
      IMGPROXY_MAX_ANIMATION_FRAMES: "30"
      IMGPROXY_READ_TIMEOUT: "10"
      IMGPROXY_WRITE_TIMEOUT: "10"
      IMGPROXY_KEEP_ALIVE_TIMEOUT: "10"

      IMGPROXY_KEY: 16db16af5c5b9d9ef312b0369dcd9727d85500d2683f4f71ed11283e6a0646b6
      IMGPROXY_SALT: 0db69801a62d16e0a12da90d6a560c5c
    ports:
      - "8081:8080"

    networks: [mini_net]

networks:
  mini_net:

volumes:
  pgdata:
  minio_data:
